f %>% autoplot(DE_fit)
models %>%
select(mod1) %>%
report()
models <-
DE_fit %>%
fill_gaps() %>%
model(mod1 = ARIMA(exchange ~ vrep + fourier(K=2)))
models %>%
select(mod1) %>%
report()
models %>%
select(mod1) %>%
gg_tsresiduals()
f <- models %>%
forecast(., new_data = DE_test)
f %>% autoplot(DE_fit)
models <-
DE_fit %>%
fill_gaps() %>%
model(mod1 = ARIMA(exchange ~ vrep + fourier(K=3)))
models <-
DE_fit %>%
fill_gaps() %>%
model(mod1 = ARIMA(exchange ~ vrep + fourier(K=4)))
models <-
DE_fit %>%
fill_gaps() %>%
model(mod1 = ARIMA(exchange ~ vrep + fourier(K=3)))
models %>%
select(mod1) %>%
report()
models %>%
select(mod1) %>%
gg_tsresiduals()
f <- models %>%
forecast(., new_data = DE_test)
f %>% autoplot(DE_fit)
# Draw random vrep from month and area from 2023
vrep_area_month <-
df %>%
filter(date >= as.Date("2023-01-01")) %>%
filter(date < as.Date("2024-01-01")) %>%
mutate(month = month(date)) %>%
select(month, area, vrep, load)
draw_vrep <- function(a, m) {
vrep_area_month %>%
filter(area == a) %>%
filter(month == m) %>%
.$vrep %>%
sample(1, replace = TRUE) * runif(1, min = 0.9, max = 1.1) * 1.2
}
create_dataset_area <- function(a, from) {
old_df <-
df %>%
filter(area == a) %>%
filter(date >= as.Date(from)) %>%
select(date, area, exchange, vrep)
new_df <-
tibble(date = seq(as.Date(CUT_OFF), as.Date("2025-12-31"), by = "day"),
area = a,
exchange = NA,
vrep = map2(a, month(date), draw_vrep))
return(
rbind(old_df, new_df) %>%
tsibble(index = date) %>%
mutate(vrep = unlist(vrep))
)
}
DE <- create_dataset_area("DK", "2022-01-01")
DE_fit <- DE %>%
filter(date < as.Date(CUT_OFF))
DE_test <- DE %>%
filter(date >= as.Date(CUT_OFF))
DE_fit
models <-
DE_fit %>%
fill_gaps() %>%
model(mod1 = ARIMA(exchange ~ vrep + fourier(K=3)))
models %>%
select(mod1) %>%
report()
models %>%
select(mod1) %>%
gg_tsresiduals()
f <- models %>%
forecast(., new_data = DE_test)
f %>% autoplot(DE_fit)
mean(f$.mean)
f %>% autoplot(DE_fit)
df
df
df %>%
filter(area == "DE") %>%
max(.$exchange)
df %>%
filter(area == "DE")
df %>%
filter(area == "DE") %>%
.$exchange %>%
max()
df %>%
filter(area == "DK") %>%
.$exchange %>%
max()
df %>%
filter(area == "NL") %>%
.$exchange %>%
max()
df %>%
filter(area == "NL") %>%
.$exchange %>%
min()
df %>%
filter(area == "NL") %>%
.$exchange %>%
max()
df %>%
filter(area == "UK") %>%
.$exchange %>%
max()
df %>%
filter(area == "UK") %>%
.$exchange %>%
min()
# Where our data ends
CUT_OFF <- "2024-05-01"
# The areas/connections-to we study
areas <- c("DE", "DK", "NL", "UK")
# Bidding zones for Norwegian day-ahead electricity prices
Bidding_zone <- c("NO1", "NO2", "NO3", "NO4", "NO5")
# Dates for when connections were fully operational
DE_conn <- "2021-01-01"
UK_conn <- "2021-10-01"
# Capacities
DE_cap <- 1400
DK_cap <- 1600
NL_cap <- 700
UK_cap <- 1400
create_dataset_area <- function(a, from, s) {
old_df <-
df %>%
filter(area == a) %>%
filter(date >= as.Date(from)) %>%
select(date, area, exchange, vrep)
new_df <-
tibble(date = seq(as.Date(CUT_OFF), as.Date("2025-12-31"), by = "day"),
area = a,
exchange = NA,
vrep = map2(a, month(date), draw_vrep) * s)
return(
rbind(old_df, new_df) %>%
tsibble(index = date) %>%
mutate(vrep = unlist(vrep))
)
}
cap <- list(DE = 1400,
DK = 1600,
NL = 700,
UK = 1400)
cap
cap$DE
cap <- list(DE = 1400,
DK = 1600,
NL = 700,
UK = 1400)
a <- "DE"
cap$a
cap$'a'
cap$`a`
cap$`a`
a <- "DE"
cap$`a`
a <- "DE"
cap$`a`
cap$`DE`
get.var(a)
get.vars(a)
get.vars(cap)
cap <- tibble(area = c("DE", "DK", "NL", "UK"),
cap = c(1400, 1600, 700, 1400))
cap
cap %>%
filter(area == a)
cap %>%
filter(area == a) %>%
.$cap[1]
cap %>%
filter(area == a) %>%
.$cap
cap %>%
filter(area == a) %>%
.$cap %>%
. + 2
cap %>%
filter(area == a) %>%
.$cap %>%
+ 2
cap <- tibble(area = c("DE", "DK", "NL", "UK"),
cap = c(1400, 1600, 700, 1400))
forecast_exchange <- function(a) {
data <- create_dataset_area(a)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test)
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area(a, CUT_OFF)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test)
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area(a, CUT_OFF, 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test)
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
create_dataset_area <- function(a, from, s) {
old_df <-
df %>%
filter(area == a) %>%
filter(date >= as.Date(from)) %>%
select(date, area, exchange, vrep)
new_df <-
tibble(date = seq(as.Date(CUT_OFF), as.Date("2025-12-31"), by = "day"),
area = a,
exchange = NA,
vrep = map2(a, month(date), draw_vrep))
return(
rbind(old_df, new_df) %>%
tsibble(index = date) %>%
mutate(vrep = unlist(vrep) * s)
)
}
forecast_exchange("DK")
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area(a, CUT_OFF, 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test)
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
data <- create_dataset_area("DE", CUT_OFF, 1)
View(data)
create_dataset_area <- function(a, from, s) {
old_df <-
df %>%
filter(area == a) %>%
filter(date >= as.Date(from)) %>%
select(date, area, exchange, vrep)
new_df <-
tibble(date = seq(as.Date(CUT_OFF), as.Date("2025-12-31"), by = "day"),
area = a,
exchange = NA,
vrep = map2(a, month(date), draw_vrep))
return(
rbind(old_df, new_df) %>%
tsibble(index = date) %>%
mutate(vrep = unlist(vrep))
)
}
data <- create_dataset_area("DE", CUT_OFF, 1)
View(data)
create_dataset_area <- function(a, from, s) {
old_df <-
df %>%
filter(area == a) %>%
filter(date >= as.Date(from)) %>%
select(date, area, exchange, vrep)
new_df <-
tibble(date = seq(as.Date(CUT_OFF), as.Date("2025-12-31"), by = "day"),
area = a,
exchange = NA,
vrep = map2(a, month(date), draw_vrep))
return(old_df)
return(
rbind(old_df, new_df) %>%
tsibble(index = date) %>%
mutate(vrep = unlist(vrep))
)
}
data <- create_dataset_area("DE", CUT_OFF, 1)
View(data)
create_dataset_area <- function(a, from, s) {
old_df <-
df %>%
filter(area == a) %>%
filter(date >= as.Date(from)) %>%
select(date, area, exchange, vrep)
new_df <-
tibble(date = seq(as.Date(CUT_OFF), as.Date("2025-12-31"), by = "day"),
area = a,
exchange = NA,
vrep = map2(a, month(date), draw_vrep))
return(
rbind(old_df, new_df) %>%
tsibble(index = date) %>%
mutate(vrep = unlist(vrep))
)
}
data <- create_dataset_area("DE", "2022-01-01", 1)
View(data)
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test)
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
max(1,2)
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test) %>%
mutate(.mean = map2(.mean, cap))
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test) %>%
mutate(.mean = map2(.mean, cap, max))
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test) %>%
mutate(.mean = map2(.mean, rep(cap, 610), max))
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test) %>%
mutate(.mean = map2(.mean, rep(cap, 305), max))
pred %>% autoplot(data_fit)
}
forecast_exchange("DK")
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = DE_test) #%>%
#mutate(.mean = map2(.mean, rep(cap, 305), max))
pred %>% autoplot(data_fit)
return(pred)
}
p <- forecast_exchange("DK")
p <- forecast_exchange("DK")
`
p
forecast_exchange <- function(a) {
data <- create_dataset_area("DE", "2022-01-01", 1)
data_fit <- data %>%
filter(date < as.Date(CUT_OFF))
data_pred <- data %>%
filter(date >= as.Date(CUT_OFF))
area_cap <- cap %>%
filter(area == a) %>%
.$cap
model <-
data_fit %>%
fill_gaps() %>%
model(mod = ARIMA(exchange ~ vrep + fourier(K=3)))
model %>%
gg_tsresiduals()
pred <- models %>%
forecast(., new_data = data_pred) #%>%
#mutate(.mean = map2(.mean, rep(cap, 305), max))
pred %>% autoplot(data_fit)
return(pred)
}
p <- forecast_exchange("DK")
p
